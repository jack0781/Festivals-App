{"version":3,"sources":["reducers/index.js","reducers/posts.js","constants/actionTypes.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","api/index.js","styles.js","App.js","actions/posts.js","index.js","images/memories.png"],"names":["reducers","combineReducers","posts","action","type","payload","map","post","_id","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useDispatch","useStyles","Card","className","CardMedia","image","selectedFile","Typography","variant","country","moment","date","fromNow","Button","style","size","onClick","fontSize","component","description","gutterBottom","CardContent","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","key","item","xs","sm","md","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","url","appBar","heading","marginLeft","App","useState","currentId","dispatch","useEffect","a","axios","get","data","console","log","message","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ae893bcb.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nimport posts from './posts';\n\nexport const reducers = combineReducers({ posts });\n","import { FETCH_ALL, CREATE, UPDATE} from '../constants/actionTypes';\n\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    default:\n      return posts;\n  }\n};\n\n","export const CREATE = 'CREATE';\nexport const UPDATE = 'UPDATE';\nexport const FETCH_ALL = 'FETCH_ALL';\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n","import React from 'react';\nimport { Card, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport useStyles from './styles';\n\nconst Post = ({ post, setCurrentId }) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.country}</Typography>\n        <Typography variant=\"body2\">{moment(post.date).fromNow()}</Typography>\n      </div>\n      <div className={classes.overlay2}>\n        <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}><MoreHorizIcon fontSize=\"default\" /></Button>\n      </div>\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.description}</Typography>\n      </div>\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.date}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Post;\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\nconst Posts = ({ setCurrentId }) => {\n  const posts = useSelector((state) => state.posts);\n  const classes = useStyles();\n\n  return (\n    !posts.length ? <CircularProgress /> : (\n      <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n        {posts.map((post) => (\n          <Grid key={post._id} item xs={12} sm={6} md={6}>\n            <Post post={post} setCurrentId={setCurrentId} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n};\n\nexport default Posts;\n","\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));\n","import axios from 'axios';\n\nconst url = 'http://localhost:5000/festivals';\n\nexport const fetchPosts = () => axios.get(url);\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles(() => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n}));\n","import React, { useState, useEffect } from 'react';\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\n\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport { getPosts } from './actions/posts';\nimport useStyles from './styles';\nimport memories from './images/memories.png';\n\nconst App = () => {\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">Festivals</Typography>\n        <img className={classes.image} src={memories} alt=\"icon\" height=\"60\" />\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n              <Posts setCurrentId={setCurrentId} />\n            </Grid>\n            {/* <Grid item xs={12} sm={4}>\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\n            </Grid> */}\n          </Grid>\n        </Container>\n      </Grow>\n    </Container>\n  );\n};\n\nexport default App;\n","import { FETCH_ALL, CREATE, UPDATE } from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { reducers } from './reducers';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n","module.exports = __webpack_public_path__ + \"static/media/memories.5c0c63fb.png\";"],"sourceRoot":""}